interface Result {
    name: 'AssertionError' | 'AssertionResult';
    ok: boolean;
    toJSON(...args: unknown[]): Record<string, unknown>;
}
export declare class AssertionError<T> extends Error implements Result {
    message: string;
    [key: string]: unknown;
    get name(): 'AssertionError';
    get ok(): boolean;
    constructor(message?: string, props?: T, ssf?: Function);
    get stack(): any;
    toJSON(stack: boolean): Record<string, unknown>;
}
export declare class AssertionResult<T> implements Result {
    [key: string]: unknown;
    get name(): 'AssertionResult';
    get ok(): boolean;
    constructor(props?: T);
    toJSON(): Record<string, unknown>;
}
export {};
